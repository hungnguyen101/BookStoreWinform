//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookStoreWinform.ProductSV {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/BookstoreService.EF")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoreImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PromotionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PromotionPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ShowOnHomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbnailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((this.CategoryField.Equals(value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedAt {
            get {
                return this.CreatedAtField;
            }
            set {
                if ((this.CreatedAtField.Equals(value) != true)) {
                    this.CreatedAtField = value;
                    this.RaisePropertyChanged("CreatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedAt {
            get {
                return this.ModifiedAtField;
            }
            set {
                if ((this.ModifiedAtField.Equals(value) != true)) {
                    this.ModifiedAtField = value;
                    this.RaisePropertyChanged("ModifiedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoreImages {
            get {
                return this.MoreImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MoreImagesField, value) != true)) {
                    this.MoreImagesField = value;
                    this.RaisePropertyChanged("MoreImages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Promotion {
            get {
                return this.PromotionField;
            }
            set {
                if ((this.PromotionField.Equals(value) != true)) {
                    this.PromotionField = value;
                    this.RaisePropertyChanged("Promotion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PromotionPrice {
            get {
                return this.PromotionPriceField;
            }
            set {
                if ((this.PromotionPriceField.Equals(value) != true)) {
                    this.PromotionPriceField = value;
                    this.RaisePropertyChanged("PromotionPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ShowOnHome {
            get {
                return this.ShowOnHomeField;
            }
            set {
                if ((this.ShowOnHomeField.Equals(value) != true)) {
                    this.ShowOnHomeField = value;
                    this.RaisePropertyChanged("ShowOnHome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Thumbnail {
            get {
                return this.ThumbnailField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailField, value) != true)) {
                    this.ThumbnailField = value;
                    this.RaisePropertyChanged("Thumbnail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductSV.IProduct")]
    public interface IProduct {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Product/findAll", ReplyAction="http://tempuri.org/IModelOf_Product/findAllResponse")]
        BookStoreWinform.ProductSV.Product[] findAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Product/findAll", ReplyAction="http://tempuri.org/IModelOf_Product/findAllResponse")]
        System.Threading.Tasks.Task<BookStoreWinform.ProductSV.Product[]> findAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Product/findById", ReplyAction="http://tempuri.org/IModelOf_Product/findByIdResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BookStoreWinform.ProductSV.Product[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BookStoreWinform.ProductSV.Product))]
        BookStoreWinform.ProductSV.Product findById(object id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Product/findById", ReplyAction="http://tempuri.org/IModelOf_Product/findByIdResponse")]
        System.Threading.Tasks.Task<BookStoreWinform.ProductSV.Product> findByIdAsync(object id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Product/insert", ReplyAction="http://tempuri.org/IModelOf_Product/insertResponse")]
        long insert(BookStoreWinform.ProductSV.Product entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Product/insert", ReplyAction="http://tempuri.org/IModelOf_Product/insertResponse")]
        System.Threading.Tasks.Task<long> insertAsync(BookStoreWinform.ProductSV.Product entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Product/update", ReplyAction="http://tempuri.org/IModelOf_Product/updateResponse")]
        bool update(BookStoreWinform.ProductSV.Product entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Product/update", ReplyAction="http://tempuri.org/IModelOf_Product/updateResponse")]
        System.Threading.Tasks.Task<bool> updateAsync(BookStoreWinform.ProductSV.Product entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Product/delete", ReplyAction="http://tempuri.org/IModelOf_Product/deleteResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BookStoreWinform.ProductSV.Product[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BookStoreWinform.ProductSV.Product))]
        bool delete(object id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Product/delete", ReplyAction="http://tempuri.org/IModelOf_Product/deleteResponse")]
        System.Threading.Tasks.Task<bool> deleteAsync(object id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/findProductsByCategory", ReplyAction="http://tempuri.org/IProduct/findProductsByCategoryResponse")]
        BookStoreWinform.ProductSV.Product[] findProductsByCategory(long catId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/findProductsByCategory", ReplyAction="http://tempuri.org/IProduct/findProductsByCategoryResponse")]
        System.Threading.Tasks.Task<BookStoreWinform.ProductSV.Product[]> findProductsByCategoryAsync(long catId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/findByKeyword", ReplyAction="http://tempuri.org/IProduct/findByKeywordResponse")]
        BookStoreWinform.ProductSV.Product[] findByKeyword(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/findByKeyword", ReplyAction="http://tempuri.org/IProduct/findByKeywordResponse")]
        System.Threading.Tasks.Task<BookStoreWinform.ProductSV.Product[]> findByKeywordAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/findByPrice", ReplyAction="http://tempuri.org/IProduct/findByPriceResponse")]
        BookStoreWinform.ProductSV.Product[] findByPrice(decimal start, decimal end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/findByPrice", ReplyAction="http://tempuri.org/IProduct/findByPriceResponse")]
        System.Threading.Tasks.Task<BookStoreWinform.ProductSV.Product[]> findByPriceAsync(decimal start, decimal end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/advanceSearch", ReplyAction="http://tempuri.org/IProduct/advanceSearchResponse")]
        BookStoreWinform.ProductSV.Product[] advanceSearch(string keyword, decimal startPrice, decimal endPrice, int catId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/advanceSearch", ReplyAction="http://tempuri.org/IProduct/advanceSearchResponse")]
        System.Threading.Tasks.Task<BookStoreWinform.ProductSV.Product[]> advanceSearchAsync(string keyword, decimal startPrice, decimal endPrice, int catId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductChannel : BookStoreWinform.ProductSV.IProduct, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductClient : System.ServiceModel.ClientBase<BookStoreWinform.ProductSV.IProduct>, BookStoreWinform.ProductSV.IProduct {
        
        public ProductClient() {
        }
        
        public ProductClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BookStoreWinform.ProductSV.Product[] findAll() {
            return base.Channel.findAll();
        }
        
        public System.Threading.Tasks.Task<BookStoreWinform.ProductSV.Product[]> findAllAsync() {
            return base.Channel.findAllAsync();
        }
        
        public BookStoreWinform.ProductSV.Product findById(object id) {
            return base.Channel.findById(id);
        }
        
        public System.Threading.Tasks.Task<BookStoreWinform.ProductSV.Product> findByIdAsync(object id) {
            return base.Channel.findByIdAsync(id);
        }
        
        public long insert(BookStoreWinform.ProductSV.Product entity) {
            return base.Channel.insert(entity);
        }
        
        public System.Threading.Tasks.Task<long> insertAsync(BookStoreWinform.ProductSV.Product entity) {
            return base.Channel.insertAsync(entity);
        }
        
        public bool update(BookStoreWinform.ProductSV.Product entity) {
            return base.Channel.update(entity);
        }
        
        public System.Threading.Tasks.Task<bool> updateAsync(BookStoreWinform.ProductSV.Product entity) {
            return base.Channel.updateAsync(entity);
        }
        
        public bool delete(object id) {
            return base.Channel.delete(id);
        }
        
        public System.Threading.Tasks.Task<bool> deleteAsync(object id) {
            return base.Channel.deleteAsync(id);
        }
        
        public BookStoreWinform.ProductSV.Product[] findProductsByCategory(long catId) {
            return base.Channel.findProductsByCategory(catId);
        }
        
        public System.Threading.Tasks.Task<BookStoreWinform.ProductSV.Product[]> findProductsByCategoryAsync(long catId) {
            return base.Channel.findProductsByCategoryAsync(catId);
        }
        
        public BookStoreWinform.ProductSV.Product[] findByKeyword(string key) {
            return base.Channel.findByKeyword(key);
        }
        
        public System.Threading.Tasks.Task<BookStoreWinform.ProductSV.Product[]> findByKeywordAsync(string key) {
            return base.Channel.findByKeywordAsync(key);
        }
        
        public BookStoreWinform.ProductSV.Product[] findByPrice(decimal start, decimal end) {
            return base.Channel.findByPrice(start, end);
        }
        
        public System.Threading.Tasks.Task<BookStoreWinform.ProductSV.Product[]> findByPriceAsync(decimal start, decimal end) {
            return base.Channel.findByPriceAsync(start, end);
        }
        
        public BookStoreWinform.ProductSV.Product[] advanceSearch(string keyword, decimal startPrice, decimal endPrice, int catId) {
            return base.Channel.advanceSearch(keyword, startPrice, endPrice, catId);
        }
        
        public System.Threading.Tasks.Task<BookStoreWinform.ProductSV.Product[]> advanceSearchAsync(string keyword, decimal startPrice, decimal endPrice, int catId) {
            return base.Channel.advanceSearchAsync(keyword, startPrice, endPrice, catId);
        }
    }
}
